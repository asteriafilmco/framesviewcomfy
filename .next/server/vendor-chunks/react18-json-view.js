"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react18-json-view";
exports.ids = ["vendor-chunks/react18-json-view"];
exports.modules = {

/***/ "(ssr)/./node_modules/react18-json-view/src/style.css":
/*!******************************************************!*\
  !*** ./node_modules/react18-json-view/src/style.css ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"440b4011997c\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QxOC1qc29uLXZpZXcvc3JjL3N0eWxlLmNzcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsY0FBYztBQUM3QixJQUFJLEtBQVUsRUFBRSxFQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZpZXdjb21meS8uL25vZGVfbW9kdWxlcy9yZWFjdDE4LWpzb24tdmlldy9zcmMvc3R5bGUuY3NzP2NkYzQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCI0NDBiNDAxMTk5N2NcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react18-json-view/src/style.css\n");

/***/ }),

/***/ "(ssr)/./node_modules/react18-json-view/dist/es/index.mjs":
/*!**********************************************************!*\
  !*** ./node_modules/react18-json-view/dist/es/index.mjs ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelSVG: () => (/* binding */ SvgCancel),\n/* harmony export */   CopiedSVG: () => (/* binding */ SvgCopied),\n/* harmony export */   CopySVG: () => (/* binding */ SvgCopy),\n/* harmony export */   DeleteSVG: () => (/* binding */ SvgTrash),\n/* harmony export */   DoneSVG: () => (/* binding */ SvgDone),\n/* harmony export */   EditSVG: () => (/* binding */ SvgEdit),\n/* harmony export */   LinkSVG: () => (/* binding */ SvgLink),\n/* harmony export */   \"default\": () => (/* binding */ JsonView),\n/* harmony export */   defaultURLRegExp: () => (/* binding */ defaultURLRegExp),\n/* harmony export */   stringify: () => (/* binding */ stringifyForCopying)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n\n\n\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar toggleSelection = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n\nvar deselectCurrent = toggleSelection;\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n};\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"âŒ˜\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\";\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"];\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nvar copyToClipboard = copy;\n\nfunction isObject(node) {\n    return Object.prototype.toString.call(node) === '[object Object]';\n}\nfunction objectSize(node) {\n    return Array.isArray(node) ? node.length : isObject(node) ? Object.keys(node).length : 0;\n}\nfunction stringifyForCopying(node, space) {\n    // return single string nodes without quotes\n    if (typeof node === 'string') {\n        return node;\n    }\n    try {\n        return JSON.stringify(node, (key, value) => {\n            switch (typeof value) {\n                case 'bigint':\n                    return String(value) + 'n';\n                case 'number':\n                case 'boolean':\n                case 'object':\n                case 'string':\n                    return value;\n                default:\n                    return String(value);\n            }\n        }, space);\n    }\n    catch (error) {\n        return `${error.name}: ${error.message}` || 'JSON.stringify failed';\n    }\n}\nfunction writeClipboard(value) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield navigator.clipboard.writeText(value);\n        }\n        catch (err) {\n            copyToClipboard(value);\n        }\n    });\n}\nfunction isCollapsed(node, depth, indexOrName, collapsed, collapseObjectsAfterLength, customOptions) {\n    if (customOptions && customOptions.collapsed !== undefined)\n        return !!customOptions.collapsed;\n    if (typeof collapsed === 'boolean')\n        return collapsed;\n    if (typeof collapsed === 'number' && depth > collapsed)\n        return true;\n    const size = objectSize(node);\n    if (typeof collapsed === 'function') {\n        const result = safeCall(collapsed, [{ node, depth, indexOrName, size }]);\n        if (typeof result === 'boolean')\n            return result;\n    }\n    if (Array.isArray(node) && size > collapseObjectsAfterLength)\n        return true;\n    if (isObject(node) && size > collapseObjectsAfterLength)\n        return true;\n    return false;\n}\nfunction isCollapsed_largeArray(node, depth, indexOrName, collapsed, collapseObjectsAfterLength, customOptions) {\n    if (customOptions && customOptions.collapsed !== undefined)\n        return !!customOptions.collapsed;\n    if (typeof collapsed === 'boolean')\n        return collapsed;\n    if (typeof collapsed === 'number' && depth > collapsed)\n        return true;\n    const size = Math.ceil(node.length / 100);\n    if (typeof collapsed === 'function') {\n        const result = safeCall(collapsed, [{ node, depth, indexOrName, size }]);\n        if (typeof result === 'boolean')\n            return result;\n    }\n    if (Array.isArray(node) && size > collapseObjectsAfterLength)\n        return true;\n    if (isObject(node) && size > collapseObjectsAfterLength)\n        return true;\n    return false;\n}\nfunction ifDisplay(displaySize, depth, fold) {\n    if (typeof displaySize === 'boolean')\n        return displaySize;\n    if (typeof displaySize === 'number' && depth > displaySize)\n        return true;\n    if (displaySize === 'collapsed' && fold)\n        return true;\n    if (displaySize === 'expanded' && !fold)\n        return true;\n    return false;\n}\nfunction safeCall(func, params) {\n    try {\n        return func(...params);\n    }\n    catch (event) {\n        reportError(event);\n    }\n}\nfunction editableAdd(editable) {\n    if (editable === true)\n        return true;\n    if (isObject(editable) && editable.add === true)\n        return true;\n}\nfunction editableEdit(editable) {\n    if (editable === true)\n        return true;\n    if (isObject(editable) && editable.edit === true)\n        return true;\n}\nfunction editableDelete(editable) {\n    if (editable === true)\n        return true;\n    if (isObject(editable) && editable.delete === true)\n        return true;\n}\nfunction isReactComponent(component) {\n    return typeof component === 'function';\n}\nfunction customAdd(customOptions) {\n    return !customOptions || customOptions.add === undefined || !!customOptions.add;\n}\nfunction customEdit(customOptions) {\n    return !customOptions || customOptions.edit === undefined || !!customOptions.edit;\n}\nfunction customDelete(customOptions) {\n    return !customOptions || customOptions.delete === undefined || !!customOptions.delete;\n}\nfunction customCopy(customOptions) {\n    return !customOptions || customOptions.enableClipboard === undefined || !!customOptions.enableClipboard;\n}\nfunction customMatchesURL(customOptions) {\n    return !customOptions || customOptions.matchesURL === undefined || !!customOptions.matchesURL;\n}\nfunction resolveEvalFailedNewValue(type, value) {\n    if (type === 'string') {\n        return value.trim().replace(/^\\\"([\\s\\S]+?)\\\"$/, '$1');\n    }\n    return value;\n}\n\nvar _path$8;\nfunction _extends$8() { _extends$8 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$8.apply(this, arguments); }\nvar SvgAngleDown = function SvgAngleDown(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends$8({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    fill: \"none\",\n    viewBox: \"0 0 16 16\"\n  }, props), _path$8 || (_path$8 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12.473 5.806a.666.666 0 0 0-.946 0L8.473 8.86a.667.667 0 0 1-.946 0L4.473 5.806a.667.667 0 1 0-.946.94l3.06 3.06a2 2 0 0 0 2.826 0l3.06-3.06a.667.667 0 0 0 0-.94Z\"\n  })));\n};\n\nvar _path$7;\nfunction _extends$7() { _extends$7 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$7.apply(this, arguments); }\nvar SvgCopy = function SvgCopy(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends$7({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, props), _path$7 || (_path$7 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M17.542 2.5h-4.75a3.963 3.963 0 0 0-3.959 3.958v4.75a3.963 3.963 0 0 0 3.959 3.959h4.75a3.963 3.963 0 0 0 3.958-3.959v-4.75A3.963 3.963 0 0 0 17.542 2.5Zm2.375 8.708a2.378 2.378 0 0 1-2.375 2.375h-4.75a2.378 2.378 0 0 1-2.375-2.375v-4.75a2.378 2.378 0 0 1 2.375-2.375h4.75a2.378 2.378 0 0 1 2.375 2.375v4.75Zm-4.75 6.334a3.963 3.963 0 0 1-3.959 3.958h-4.75A3.963 3.963 0 0 1 2.5 17.542v-4.75a3.963 3.963 0 0 1 3.958-3.959.791.791 0 1 1 0 1.584 2.378 2.378 0 0 0-2.375 2.375v4.75a2.378 2.378 0 0 0 2.375 2.375h4.75a2.378 2.378 0 0 0 2.375-2.375.792.792 0 1 1 1.584 0Z\"\n  })));\n};\n\nvar _path$6, _path2$5;\nfunction _extends$6() { _extends$6 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$6.apply(this, arguments); }\nvar SvgCopied = function SvgCopied(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends$6({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, props), _path$6 || (_path$6 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M17.25 3H6.75A3.755 3.755 0 0 0 3 6.75v10.5A3.754 3.754 0 0 0 6.75 21h10.5A3.754 3.754 0 0 0 21 17.25V6.75A3.755 3.755 0 0 0 17.25 3Zm2.25 14.25a2.25 2.25 0 0 1-2.25 2.25H6.75a2.25 2.25 0 0 1-2.25-2.25V6.75A2.25 2.25 0 0 1 6.75 4.5h10.5a2.25 2.25 0 0 1 2.25 2.25v10.5Z\"\n  })), _path2$5 || (_path2$5 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"#14C786\",\n    d: \"M10.312 14.45 7.83 11.906a.625.625 0 0 0-.896 0 .659.659 0 0 0 0 .918l2.481 2.546a1.264 1.264 0 0 0 .896.381 1.237 1.237 0 0 0 .895-.38l5.858-6.011a.658.658 0 0 0 0-.919.625.625 0 0 0-.896 0l-5.857 6.01Z\"\n  })));\n};\n\nfunction CopyButton({ node, nodeMeta }) {\n    const { customizeCopy, CopyComponent, CopiedComponent } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(JsonViewContext);\n    const [copied, setCopied] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const copyHandler = (event) => {\n        event.stopPropagation();\n        const value = customizeCopy(node, nodeMeta);\n        if (typeof value === 'string' && value) {\n            writeClipboard(value);\n        }\n        setCopied(true);\n        setTimeout(() => setCopied(false), 3000);\n    };\n    return copied ? (typeof CopiedComponent === 'function' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CopiedComponent, { className: 'json-view--copy', style: { display: 'inline-block' } })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgCopied, { className: 'json-view--copy', style: { display: 'inline-block' } }))) : typeof CopyComponent === 'function' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CopyComponent, { onClick: copyHandler, className: 'json-view--copy' })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgCopy, { onClick: copyHandler, className: 'json-view--copy' }));\n}\n\nfunction NameValue({ indexOrName, value, depth, deleteHandle, editHandle, parent, parentPath }) {\n    const { displayArrayIndex } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(JsonViewContext);\n    const isArray = Array.isArray(parent);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", Object.assign({ className: 'json-view--pair' }, { children: [!isArray || (isArray && displayArrayIndex) ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", Object.assign({ className: typeof indexOrName === 'number' ? 'json-view--index' : 'json-view--property' }, { children: indexOrName })), \":\", ' '] })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {})), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(JsonNode, { node: value, depth: depth + 1, deleteHandle: (indexOrName, parentPath) => deleteHandle(indexOrName, parentPath), editHandle: (indexOrName, newValue, oldValue, parentPath) => editHandle(indexOrName, newValue, oldValue, parentPath), parent: parent, indexOrName: indexOrName, parentPath: parentPath })] })));\n}\n\nvar _path$5, _path2$4;\nfunction _extends$5() { _extends$5 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$5.apply(this, arguments); }\nvar SvgTrash = function SvgTrash(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends$5({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, props), _path$5 || (_path$5 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M18.75 6h-2.325a3.757 3.757 0 0 0-3.675-3h-1.5a3.757 3.757 0 0 0-3.675 3H5.25a.75.75 0 0 0 0 1.5H6v9.75A3.754 3.754 0 0 0 9.75 21h4.5A3.754 3.754 0 0 0 18 17.25V7.5h.75a.75.75 0 1 0 0-1.5Zm-7.5-1.5h1.5A2.255 2.255 0 0 1 14.872 6H9.128a2.255 2.255 0 0 1 2.122-1.5Zm5.25 12.75a2.25 2.25 0 0 1-2.25 2.25h-4.5a2.25 2.25 0 0 1-2.25-2.25V7.5h9v9.75Z\"\n  })), _path2$4 || (_path2$4 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"#DA0000\",\n    d: \"M10.5 16.5a.75.75 0 0 0 .75-.75v-4.5a.75.75 0 1 0-1.5 0v4.5a.75.75 0 0 0 .75.75ZM13.5 16.5a.75.75 0 0 0 .75-.75v-4.5a.75.75 0 1 0-1.5 0v4.5a.75.75 0 0 0 .75.75Z\"\n  })));\n};\n\nvar _path$4, _path2$3;\nfunction _extends$4() { _extends$4 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$4.apply(this, arguments); }\nvar SvgAddSquare = function SvgAddSquare(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends$4({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, props), _path$4 || (_path$4 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M21 6.75v10.5A3.754 3.754 0 0 1 17.25 21H6.75A3.754 3.754 0 0 1 3 17.25V6.75A3.754 3.754 0 0 1 6.75 3h10.5A3.754 3.754 0 0 1 21 6.75Zm-1.5 0c0-1.24-1.01-2.25-2.25-2.25H6.75C5.51 4.5 4.5 5.51 4.5 6.75v10.5c0 1.24 1.01 2.25 2.25 2.25h10.5c1.24 0 2.25-1.01 2.25-2.25V6.75Z\"\n  })), _path2$3 || (_path2$3 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"#14C786\",\n    d: \"M15 12.75a.75.75 0 1 0 0-1.5h-2.25V9a.75.75 0 1 0-1.5 0v2.25H9a.75.75 0 1 0 0 1.5h2.25V15a.75.75 0 1 0 1.5 0v-2.25H15Z\"\n  })));\n};\n\nvar _path$3, _path2$2;\nfunction _extends$3() { _extends$3 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$3.apply(this, arguments); }\nvar SvgDone = function SvgDone(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends$3({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, props), _path$3 || (_path$3 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12 3a9 9 0 1 0 9 9 9.01 9.01 0 0 0-9-9Zm0 16.5a7.5 7.5 0 1 1 7.5-7.5 7.509 7.509 0 0 1-7.5 7.5Z\"\n  })), _path2$2 || (_path2$2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"#14C786\",\n    d: \"m10.85 13.96-1.986-2.036a.5.5 0 0 0-.716 0 .527.527 0 0 0 0 .735l1.985 2.036a1.01 1.01 0 0 0 .717.305.99.99 0 0 0 .716-.305l4.686-4.808a.526.526 0 0 0 0-.735.5.5 0 0 0-.716 0l-4.687 4.809Z\"\n  })));\n};\n\nvar _path$2, _path2$1;\nfunction _extends$2() { _extends$2 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }\nvar SvgCancel = function SvgCancel(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends$2({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, props), _path$2 || (_path$2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"#DA0000\",\n    d: \"M15 9a.75.75 0 0 0-1.06 0L12 10.94 10.06 9A.75.75 0 0 0 9 10.06L10.94 12 9 13.94A.75.75 0 0 0 10.06 15L12 13.06 13.94 15A.75.75 0 0 0 15 13.94L13.06 12 15 10.06A.75.75 0 0 0 15 9Z\"\n  })), _path2$1 || (_path2$1 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12 3a9 9 0 1 0 9 9 9.01 9.01 0 0 0-9-9Zm0 16.5a7.5 7.5 0 1 1 7.5-7.5 7.509 7.509 0 0 1-7.5 7.5Z\"\n  })));\n};\n\nfunction LargeArrayNode({ originNode, node, depth, index, deleteHandle: _deleteSelf, customOptions, startIndex, parent, parentPath }) {\n    const { enableClipboard, src, onEdit, onChange, forceUpdate, displaySize, CustomOperation } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(JsonViewContext);\n    const currentPath = [...parentPath, String(index)];\n    const [fold, setFold] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    // Edit property\n    const editHandle = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((indexOrName, newValue, oldValue) => {\n        originNode[indexOrName] = newValue;\n        if (onEdit)\n            onEdit({\n                newValue,\n                oldValue,\n                depth,\n                src,\n                indexOrName,\n                parentType: 'array',\n                parentPath\n            });\n        if (onChange)\n            onChange({ type: 'edit', depth, src, indexOrName, parentType: 'array', parentPath });\n        forceUpdate();\n    }, [node, onEdit, onChange, forceUpdate]);\n    // Delete property\n    const deleteHandle = (index) => {\n        originNode.splice(index, 1);\n        if (_deleteSelf)\n            _deleteSelf(index, parentPath);\n        forceUpdate();\n    };\n    const Icons = ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [!fold && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ onClick: () => setFold(true), className: 'jv-size-chevron' }, { children: [ifDisplay(displaySize, depth, fold) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ className: 'jv-size' }, { children: [objectSize(node), \" Items\"] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgAngleDown, { className: 'jv-chevron' })] }))), !fold && enableClipboard && customCopy(customOptions) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CopyButton, { node: node, nodeMeta: { depth, indexOrName: index, parent, parentPath, currentPath } })), typeof CustomOperation === 'function' ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CustomOperation, { node: node }) : null] }));\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"div\", { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: '[' }), Icons, !fold ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({ className: 'jv-indent' }, { children: node.map((n, i) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NameValue, { indexOrName: i + startIndex, value: n, depth: depth, parent: node, deleteHandle: deleteHandle, editHandle: editHandle, parentPath: parentPath }, String(index) + String(i)))) }))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"button\", Object.assign({ onClick: () => setFold(false), className: 'jv-button' }, { children: [startIndex, \" ... \", startIndex + node.length - 1] }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: ']' })] }));\n}\n\nfunction LargeArray({ node, depth, deleteHandle: _deleteSelf, indexOrName, customOptions, parent, parentPath }) {\n    const currentPath = typeof indexOrName !== 'undefined' ? [...parentPath, String(indexOrName)] : parentPath;\n    const nestCollapsedArray = [];\n    for (let i = 0; i < node.length; i += 100) {\n        nestCollapsedArray.push(node.slice(i, i + 100));\n    }\n    const { collapsed, enableClipboard, collapseObjectsAfterLength, editable, onDelete, src, onAdd, CustomOperation, onChange, forceUpdate, displaySize } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(JsonViewContext);\n    const [fold, setFold] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(isCollapsed_largeArray(node, depth, indexOrName, collapsed, collapseObjectsAfterLength, customOptions));\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        setFold(isCollapsed_largeArray(node, depth, indexOrName, collapsed, collapseObjectsAfterLength, customOptions));\n    }, [collapsed, collapseObjectsAfterLength]);\n    // Delete self\n    const [deleting, setDeleting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const deleteSelf = () => {\n        setDeleting(false);\n        if (_deleteSelf)\n            _deleteSelf(indexOrName, parentPath);\n        if (onDelete)\n            onDelete({ value: node, depth, src, indexOrName: indexOrName, parentType: 'array', parentPath });\n        if (onChange)\n            onChange({\n                type: 'delete',\n                depth,\n                src,\n                indexOrName: indexOrName,\n                parentType: 'array',\n                parentPath\n            });\n    };\n    // Add\n    const [adding, setAdding] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const add = () => {\n        const arr = node;\n        arr.push(null);\n        if (onAdd)\n            onAdd({ indexOrName: arr.length - 1, depth, src, parentType: 'array', parentPath });\n        if (onChange)\n            onChange({ type: 'add', indexOrName: arr.length - 1, depth, src, parentType: 'array', parentPath });\n        forceUpdate();\n    };\n    const isEditing = deleting || adding;\n    const cancel = () => {\n        setDeleting(false);\n        setAdding(false);\n    };\n    const Icons = ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [!fold && !isEditing && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ onClick: () => setFold(true), className: 'jv-size-chevron' }, { children: [ifDisplay(displaySize, depth, fold) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ className: 'jv-size' }, { children: [node.length, \" Items\"] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgAngleDown, { className: 'jv-chevron' })] }))), isEditing && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgDone, { className: 'json-view--edit', style: { display: 'inline-block' }, onClick: adding ? add : deleteSelf }), isEditing && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgCancel, { className: 'json-view--edit', style: { display: 'inline-block' }, onClick: cancel }), !fold && !isEditing && enableClipboard && customCopy(customOptions) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CopyButton, { node: node, nodeMeta: { depth, indexOrName, parent, parentPath, currentPath } })), !fold && !isEditing && editableAdd(editable) && customAdd(customOptions) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgAddSquare, { className: 'json-view--edit', onClick: () => {\n                    add();\n                } })), !fold && !isEditing && editableDelete(editable) && customDelete(customOptions) && _deleteSelf && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgTrash, { className: 'json-view--edit', onClick: () => setDeleting(true) })), typeof CustomOperation === 'function' ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CustomOperation, { node: node }) : null] }));\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: '[' }), Icons, !fold ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({ className: 'jv-indent' }, { children: nestCollapsedArray.map((item, index) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LargeArrayNode, { originNode: node, node: item, depth: depth, index: index, startIndex: index * 100, deleteHandle: _deleteSelf, customOptions: customOptions, parentPath: parentPath }, String(indexOrName) + String(index)))) }))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({ onClick: () => setFold(false), className: 'jv-button' }, { children: \"...\" }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: ']' }), fold && ifDisplay(displaySize, depth, fold) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ onClick: () => setFold(false), className: 'jv-size' }, { children: [node.length, \" Items\"] })))] }));\n}\n\nfunction ObjectNode({ node, depth, indexOrName, deleteHandle: _deleteSelf, customOptions, parent, parentPath }) {\n    const { collapsed, onCollapse, enableClipboard, ignoreLargeArray, collapseObjectsAfterLength, editable, onDelete, src, onAdd, onEdit, onChange, forceUpdate, displaySize, CustomOperation } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(JsonViewContext);\n    const currentPath = typeof indexOrName !== 'undefined' ? [...parentPath, String(indexOrName)] : parentPath;\n    if (!ignoreLargeArray && Array.isArray(node) && node.length > 100) {\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LargeArray, { node: node, depth: depth, indexOrName: indexOrName, deleteHandle: _deleteSelf, customOptions: customOptions, parentPath: currentPath });\n    }\n    const isPlainObject = isObject(node);\n    const [fold, _setFold] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(isCollapsed(node, depth, indexOrName, collapsed, collapseObjectsAfterLength, customOptions));\n    const setFold = (value) => {\n        onCollapse === null || onCollapse === void 0 ? void 0 : onCollapse({ isCollapsing: !value, node, depth, indexOrName });\n        _setFold(value);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n        setFold(isCollapsed(node, depth, indexOrName, collapsed, collapseObjectsAfterLength, customOptions));\n    }, [collapsed, collapseObjectsAfterLength]);\n    // Edit property\n    const editHandle = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((indexOrName, newValue, oldValue) => {\n        if (Array.isArray(node)) {\n            node[+indexOrName] = newValue;\n        }\n        else if (node) {\n            node[indexOrName] = newValue;\n        }\n        if (onEdit)\n            onEdit({\n                newValue,\n                oldValue,\n                depth,\n                src,\n                indexOrName: indexOrName,\n                parentType: isPlainObject ? 'object' : 'array',\n                parentPath: currentPath\n            });\n        if (onChange)\n            onChange({ type: 'edit', depth, src, indexOrName: indexOrName, parentType: isPlainObject ? 'object' : 'array', parentPath: currentPath });\n        forceUpdate();\n    }, [node, onEdit, onChange, forceUpdate]);\n    // Delete property\n    const deleteHandle = (indexOrName) => {\n        if (Array.isArray(node)) {\n            node.splice(+indexOrName, 1);\n        }\n        else if (node) {\n            delete node[indexOrName];\n        }\n        forceUpdate();\n    };\n    // Delete self\n    const [deleting, setDeleting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const deleteSelf = () => {\n        setDeleting(false);\n        if (_deleteSelf)\n            _deleteSelf(indexOrName, currentPath);\n        if (onDelete)\n            onDelete({ value: node, depth, src, indexOrName: indexOrName, parentType: isPlainObject ? 'object' : 'array', parentPath: currentPath });\n        if (onChange)\n            onChange({\n                type: 'delete',\n                depth,\n                src,\n                indexOrName: indexOrName,\n                parentType: isPlainObject ? 'object' : 'array',\n                parentPath: currentPath\n            });\n    };\n    // Add\n    const [adding, setAdding] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const add = () => {\n        var _a;\n        if (isPlainObject) {\n            const inputName = (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.value;\n            if (inputName) {\n                node[inputName] = null;\n                if (inputRef.current)\n                    inputRef.current.value = '';\n                setAdding(false);\n                if (onAdd)\n                    onAdd({ indexOrName: inputName, depth, src, parentType: 'object', parentPath: currentPath });\n                if (onChange)\n                    onChange({ type: 'add', indexOrName: inputName, depth, src, parentType: 'object', parentPath: currentPath });\n            }\n        }\n        else if (Array.isArray(node)) {\n            const arr = node;\n            arr.push(null);\n            if (onAdd)\n                onAdd({ indexOrName: arr.length - 1, depth, src, parentType: 'array', parentPath: currentPath });\n            if (onChange)\n                onChange({ type: 'add', indexOrName: arr.length - 1, depth, src, parentType: 'array', parentPath: currentPath });\n        }\n        forceUpdate();\n    };\n    const handleAddKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            add();\n        }\n        else if (event.key === 'Escape') {\n            cancel();\n        }\n    };\n    const isEditing = deleting || adding;\n    const cancel = () => {\n        setDeleting(false);\n        setAdding(false);\n    };\n    const Icons = ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [!fold && !isEditing && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ onClick: () => setFold(true), className: 'jv-size-chevron' }, { children: [ifDisplay(displaySize, depth, fold) && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ className: 'jv-size' }, { children: [objectSize(node), \" Items\"] })), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgAngleDown, { className: 'jv-chevron' })] }))), adding && isPlainObject && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"input\", { className: 'json-view--input', placeholder: 'property', ref: inputRef, onKeyDown: handleAddKeyDown }), isEditing && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgDone, { className: 'json-view--edit', style: { display: 'inline-block' }, onClick: adding ? add : deleteSelf }), isEditing && (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgCancel, { className: 'json-view--edit', style: { display: 'inline-block' }, onClick: cancel }), !fold && !isEditing && enableClipboard && customCopy(customOptions) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CopyButton, { node: node, nodeMeta: { depth, indexOrName, parent, parentPath, currentPath } })), !fold && !isEditing && editableAdd(editable) && customAdd(customOptions) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgAddSquare, { className: 'json-view--edit', onClick: () => {\n                    if (isPlainObject) {\n                        setAdding(true);\n                        setTimeout(() => { var _a; return (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.focus(); });\n                    }\n                    else {\n                        add();\n                    }\n                } })), !fold && !isEditing && editableDelete(editable) && customDelete(customOptions) && _deleteSelf && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgTrash, { className: 'json-view--edit', onClick: () => setDeleting(true) })), typeof CustomOperation === 'function' ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CustomOperation, { node: node }) : null] }));\n    if (Array.isArray(node)) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: '[' }), Icons, !fold ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({ className: 'jv-indent' }, { children: node.map((n, i) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NameValue, { indexOrName: i, value: n, depth: depth, parent: node, deleteHandle: deleteHandle, editHandle: editHandle, parentPath: currentPath }, String(indexOrName) + String(i)))) }))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({ onClick: () => setFold(false), className: 'jv-button' }, { children: \"...\" }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: ']' }), fold && ifDisplay(displaySize, depth, fold) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ onClick: () => setFold(false), className: 'jv-size' }, { children: [objectSize(node), \" Items\"] })))] }));\n    }\n    else if (isPlainObject) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: '{' }), Icons, !fold ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", Object.assign({ className: 'jv-indent' }, { children: Object.entries(node).map(([name, value]) => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NameValue, { indexOrName: name, value: value, depth: depth, parent: node, deleteHandle: deleteHandle, editHandle: editHandle, parentPath: currentPath }, String(indexOrName) + String(name)))) }))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"button\", Object.assign({ onClick: () => setFold(false), className: 'jv-button' }, { children: \"...\" }))), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: '}' }), fold && ifDisplay(displaySize, depth, fold) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ onClick: () => setFold(false), className: 'jv-size' }, { children: [objectSize(node), \" Items\"] })))] }));\n    }\n    else {\n        return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { children: String(node) });\n    }\n}\n\nconst LongString = react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ str, className, ctrlClick }, ref) => {\n    let { collapseStringMode, collapseStringsAfterLength, customizeCollapseStringUI } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(JsonViewContext);\n    const [truncated, setTruncated] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const strRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    collapseStringsAfterLength = collapseStringsAfterLength > 0 ? collapseStringsAfterLength : 0;\n    const str_show = str.replace(/\\s+/g, ' ');\n    const collapseStringUI = typeof customizeCollapseStringUI === 'function'\n        ? customizeCollapseStringUI(str_show, truncated)\n        : typeof customizeCollapseStringUI === 'string'\n            ? customizeCollapseStringUI\n            : '...';\n    const clickToTruncateOrEdit = (event) => {\n        var _a;\n        if ((event.ctrlKey || event.metaKey) && ctrlClick) {\n            ctrlClick(event);\n        }\n        else {\n            const selection = window.getSelection();\n            if (selection && selection.anchorOffset !== selection.focusOffset && ((_a = selection.anchorNode) === null || _a === void 0 ? void 0 : _a.parentElement) === strRef.current)\n                return;\n            setTruncated(!truncated);\n        }\n    };\n    if (str.length <= collapseStringsAfterLength)\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ ref: strRef, className: className, onClick: ctrlClick }, { children: [\"\\\"\", str, \"\\\"\"] })));\n    if (collapseStringMode === 'address')\n        return str.length <= 10 ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ ref: strRef, className: className, onClick: ctrlClick }, { children: [\"\\\"\", str, \"\\\"\"] }))) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ ref: strRef, onClick: clickToTruncateOrEdit, className: className + ' cursor-pointer' }, { children: [\"\\\"\", truncated ? [str_show.slice(0, 6), collapseStringUI, str_show.slice(-4)] : str, \"\\\"\"] })));\n    if (collapseStringMode === 'directly') {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ ref: strRef, onClick: clickToTruncateOrEdit, className: className + ' cursor-pointer' }, { children: [\"\\\"\", truncated ? [str_show.slice(0, collapseStringsAfterLength), collapseStringUI] : str, \"\\\"\"] })));\n    }\n    if (collapseStringMode === 'word') {\n        let index_ahead = collapseStringsAfterLength;\n        let index_behind = collapseStringsAfterLength + 1;\n        let str_collapsed = str_show;\n        let count = 1;\n        while (true) {\n            if (/\\W/.test(str[index_ahead])) {\n                str_collapsed = str.slice(0, index_ahead);\n                break;\n            }\n            if (/\\W/.test(str[index_behind])) {\n                str_collapsed = str.slice(0, index_behind);\n                break;\n            }\n            if (count === 6) {\n                str_collapsed = str.slice(0, collapseStringsAfterLength);\n                break;\n            }\n            count++;\n            index_ahead--;\n            index_behind++;\n        }\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ ref: strRef, onClick: clickToTruncateOrEdit, className: className + ' cursor-pointer' }, { children: [\"\\\"\", truncated ? [str_collapsed, collapseStringUI] : str, \"\\\"\"] })));\n    }\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ ref: strRef, className: className }, { children: [\"\\\"\", str, \"\\\"\"] })));\n});\n\nvar _path$1;\nfunction _extends$1() { _extends$1 = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$1.apply(this, arguments); }\nvar SvgEdit = function SvgEdit(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends$1({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, props), _path$1 || (_path$1 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M17.25 3H6.75A3.754 3.754 0 0 0 3 6.75v10.5A3.754 3.754 0 0 0 6.75 21h10.5A3.754 3.754 0 0 0 21 17.25V6.75A3.754 3.754 0 0 0 17.25 3Zm2.25 14.25c0 1.24-1.01 2.25-2.25 2.25H6.75c-1.24 0-2.25-1.01-2.25-2.25V6.75c0-1.24 1.01-2.25 2.25-2.25h10.5c1.24 0 2.25 1.01 2.25 2.25v10.5Zm-6.09-9.466-5.031 5.03a2.981 2.981 0 0 0-.879 2.121v1.19c0 .415.336.75.75.75h1.19c.8 0 1.554-.312 2.12-.879l5.03-5.03a2.252 2.252 0 0 0 0-3.182c-.85-.85-2.331-.85-3.18 0Zm-2.91 7.151c-.28.28-.666.44-1.06.44H9v-.44c0-.4.156-.777.44-1.06l3.187-3.188 1.06 1.061-3.187 3.188Zm5.03-5.03-.782.783-1.06-1.061.782-.782a.766.766 0 0 1 1.06 0 .75.75 0 0 1 0 1.06Z\"\n  })));\n};\n\nvar _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nvar SvgLink = function SvgLink(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\"\n  }, props), _path || (_path = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M6.75 3h5.5v1.5h-5.5C5.51 4.5 4.5 5.51 4.5 6.75v10.5c0 1.24 1.01 2.25 2.25 2.25h10.5c1.24 0 2.25-1.01 2.25-2.25v-5.5H21v5.5A3.754 3.754 0 0 1 17.25 21H6.75A3.754 3.754 0 0 1 3 17.25V6.75A3.754 3.754 0 0 1 6.75 3Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1__.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M20.013 3h-3.946a.987.987 0 0 0 0 1.973h1.564l-6.342 6.342a1.004 1.004 0 0 0 0 1.396 1.004 1.004 0 0 0 1.396 0l6.342-6.342v1.564a.987.987 0 0 0 1.973 0V3.987A.987.987 0 0 0 20.013 3Z\"\n  })));\n};\n\nfunction JsonNode({ node, depth, deleteHandle: _deleteHandle, indexOrName, parent, editHandle, parentPath }) {\n    // prettier-ignore\n    const { collapseStringsAfterLength, enableClipboard, editable, src, onDelete, onChange, customizeNode, matchesURL, urlRegExp, EditComponent, DoneComponent, CancelComponent, CustomOperation } = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(JsonViewContext);\n    let customReturn;\n    if (typeof customizeNode === 'function')\n        customReturn = safeCall(customizeNode, [{ node, depth, indexOrName }]);\n    if (customReturn) {\n        if ((0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(customReturn))\n            return customReturn;\n        else if (isReactComponent(customReturn)) {\n            const CustomComponent = customReturn;\n            return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CustomComponent, { node: node, depth: depth, indexOrName: indexOrName });\n        }\n    }\n    if (Array.isArray(node) || isObject(node)) {\n        return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ObjectNode, { parent: parent, node: node, depth: depth, indexOrName: indexOrName, deleteHandle: _deleteHandle, parentPath: parentPath, customOptions: typeof customReturn === 'object' ? customReturn : undefined }));\n    }\n    else {\n        const type = typeof node;\n        const currentPath = typeof indexOrName !== 'undefined' ? [...parentPath, String(indexOrName)] : parentPath;\n        const [editing, setEditing] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n        const [deleting, setDeleting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n        const valueRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n        const edit = () => {\n            setEditing(true);\n            setTimeout(() => {\n                var _a, _b;\n                (_a = window.getSelection()) === null || _a === void 0 ? void 0 : _a.selectAllChildren(valueRef.current);\n                (_b = valueRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n            });\n        };\n        const done = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => {\n            let newValue = valueRef.current.innerText;\n            try {\n                const parsedValue = JSON.parse(newValue);\n                if (editHandle)\n                    editHandle(indexOrName, parsedValue, node, parentPath);\n            }\n            catch (e) {\n                const trimmedStringValue = resolveEvalFailedNewValue(type, newValue);\n                if (editHandle)\n                    editHandle(indexOrName, trimmedStringValue, node, parentPath);\n            }\n            setEditing(false);\n        }, [editHandle, indexOrName, node, parentPath, type]);\n        const cancel = () => {\n            setEditing(false);\n            setDeleting(false);\n        };\n        const deleteHandle = () => {\n            setDeleting(false);\n            if (_deleteHandle)\n                _deleteHandle(indexOrName, parentPath);\n            if (onDelete)\n                onDelete({\n                    value: node,\n                    depth,\n                    src,\n                    indexOrName: indexOrName,\n                    parentType: Array.isArray(parent) ? 'array' : 'object',\n                    parentPath\n                });\n            if (onChange)\n                onChange({\n                    depth,\n                    src,\n                    indexOrName: indexOrName,\n                    parentType: Array.isArray(parent) ? 'array' : 'object',\n                    type: 'delete',\n                    parentPath\n                });\n        };\n        const handleKeyDown = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((event) => {\n            if (event.key === 'Enter') {\n                event.preventDefault();\n                done();\n            }\n            else if (event.key === 'Escape') {\n                cancel();\n            }\n        }, [done]);\n        const isEditing = editing || deleting;\n        const ctrlClick = !isEditing && editableEdit(editable) && customEdit(customReturn) && editHandle\n            ? (event) => {\n                if (event.ctrlKey || event.metaKey)\n                    edit();\n            }\n            : undefined;\n        const Icons = ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [isEditing &&\n                    (typeof DoneComponent === 'function' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DoneComponent, { className: 'json-view--edit', style: { display: 'inline-block' }, onClick: deleting ? deleteHandle : done })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgDone, { className: 'json-view--edit', style: { display: 'inline-block' }, onClick: deleting ? deleteHandle : done }))), isEditing &&\n                    (typeof CancelComponent === 'function' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CancelComponent, { className: 'json-view--edit', style: { display: 'inline-block' }, onClick: cancel })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgCancel, { className: 'json-view--edit', style: { display: 'inline-block' }, onClick: cancel }))), !isEditing && enableClipboard && customCopy(customReturn) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CopyButton, { node: node, nodeMeta: { depth, indexOrName, parent, parentPath, currentPath } })), !isEditing && matchesURL && type === 'string' && urlRegExp.test(node) && customMatchesURL(customReturn) && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", Object.assign({ href: node, target: '_blank', className: 'json-view--link' }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgLink, {}) }))), !isEditing &&\n                    editableEdit(editable) &&\n                    customEdit(customReturn) &&\n                    editHandle &&\n                    (typeof EditComponent === 'function' ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EditComponent, { className: 'json-view--edit', onClick: edit })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgEdit, { className: 'json-view--edit', onClick: edit }))), !isEditing && editableDelete(editable) && customDelete(customReturn) && _deleteHandle && ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SvgTrash, { className: 'json-view--edit', onClick: () => setDeleting(true) })), typeof CustomOperation === 'function' ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CustomOperation, { node: node }) : null] }));\n        let className = 'json-view--string';\n        switch (type) {\n            case 'number':\n            case 'bigint':\n                className = 'json-view--number';\n                break;\n            case 'boolean':\n                className = 'json-view--boolean';\n                break;\n            case 'object':\n                className = 'json-view--null';\n                break;\n        }\n        if (typeof (customReturn === null || customReturn === void 0 ? void 0 : customReturn.className) === 'string')\n            className += ' ' + customReturn.className;\n        if (deleting)\n            className += ' json-view--deleting';\n        let displayValue = String(node);\n        if (type === 'bigint')\n            displayValue += 'n';\n        const EditingElement = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", { contentEditable: true, className: className, dangerouslySetInnerHTML: { __html: type === 'string' ? `\"${displayValue}\"` : displayValue }, ref: valueRef, onKeyDown: handleKeyDown })), [displayValue, type, handleKeyDown]);\n        if (type === 'string')\n            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [editing ? (EditingElement) : node.length > collapseStringsAfterLength ? ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LongString, { str: node, ref: valueRef, className: className, ctrlClick: ctrlClick })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\", Object.assign({ className: className, onClick: ctrlClick }, { children: [\"\\\"\", displayValue, \"\\\"\"] }))), Icons] }));\n        else {\n            return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, { children: [editing ? (EditingElement) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\", Object.assign({ className: className, onClick: ctrlClick }, { children: displayValue }))), Icons] }));\n        }\n    }\n}\n\nconst defaultURLRegExp = /^(((ht|f)tps?):\\/\\/)?([^!@#$%^&*?.\\s-]([^!@#$%^&*?.\\s]{0,63}[^!@#$%^&*?.\\s])?\\.)+[a-z]{2,6}\\/?/;\nconst JsonViewContext = (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    src: undefined,\n    collapseStringsAfterLength: 99,\n    collapseStringMode: 'directly',\n    customizeCollapseStringUI: undefined,\n    collapseObjectsAfterLength: 20,\n    collapsed: false,\n    onCollapse: undefined,\n    enableClipboard: true,\n    editable: false,\n    onEdit: undefined,\n    onDelete: undefined,\n    onAdd: undefined,\n    onChange: undefined,\n    forceUpdate: () => { },\n    customizeNode: undefined,\n    customizeCopy: (() => { }),\n    displaySize: undefined,\n    displayArrayIndex: true,\n    matchesURL: false,\n    urlRegExp: defaultURLRegExp,\n    ignoreLargeArray: false,\n    CopyComponent: undefined,\n    CopiedComponent: undefined,\n    EditComponent: undefined,\n    CancelComponent: undefined,\n    DoneComponent: undefined,\n    CustomOperation: undefined\n});\nfunction JsonView({ src: _src, collapseStringsAfterLength = 99, collapseStringMode = 'directly', customizeCollapseStringUI, collapseObjectsAfterLength = 99, collapsed, onCollapse, enableClipboard = true, editable = false, onEdit, onDelete, onAdd, onChange, dark = false, theme = 'default', customizeNode, customizeCopy = node => stringifyForCopying(node), displaySize, displayArrayIndex = true, style, className, matchesURL = false, urlRegExp = defaultURLRegExp, ignoreLargeArray = false, CopyComponent, CopiedComponent, EditComponent, CancelComponent, DoneComponent, CustomOperation }) {\n    const [_, update] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const forceUpdate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(() => update(state => ++state), []);\n    const [src, setSrc] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(_src);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => setSrc(_src), [_src]);\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(JsonViewContext.Provider, Object.assign({ value: {\n            src,\n            collapseStringsAfterLength,\n            collapseStringMode,\n            customizeCollapseStringUI,\n            collapseObjectsAfterLength,\n            collapsed,\n            onCollapse,\n            enableClipboard,\n            editable,\n            onEdit,\n            onDelete,\n            onAdd,\n            onChange,\n            forceUpdate,\n            customizeNode,\n            customizeCopy,\n            displaySize,\n            displayArrayIndex,\n            matchesURL,\n            urlRegExp,\n            ignoreLargeArray,\n            CopyComponent,\n            CopiedComponent,\n            EditComponent,\n            CancelComponent,\n            DoneComponent,\n            CustomOperation\n        } }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\", Object.assign({ className: 'json-view' + (dark ? ' dark' : '') + (theme && theme !== 'default' ? ' json-view_' + theme : '') + (className ? ' ' + className : ''), style: style }, { children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(JsonNode, { node: src, depth: 1, editHandle: (indexOrName, newValue, oldValue, parentPath) => {\n                    setSrc(newValue);\n                    if (onEdit)\n                        onEdit({\n                            newValue,\n                            oldValue,\n                            depth: 1,\n                            src,\n                            indexOrName: indexOrName,\n                            parentType: null,\n                            parentPath: parentPath\n                        });\n                    if (onChange)\n                        onChange({ type: 'edit', depth: 1, src, indexOrName: indexOrName, parentType: null, parentPath: parentPath });\n                }, deleteHandle: (indexOrName, parentPath) => {\n                    setSrc(undefined);\n                    if (onDelete)\n                        onDelete({\n                            value: src,\n                            depth: 1,\n                            src,\n                            indexOrName: indexOrName,\n                            parentType: null,\n                            parentPath: parentPath\n                        });\n                    if (onChange)\n                        onChange({\n                            depth: 1,\n                            src,\n                            indexOrName: indexOrName,\n                            parentType: null,\n                            type: 'delete',\n                            parentPath: parentPath\n                        });\n                }, parentPath: [] }) })) })));\n}\n\n\n//# sourceMappingURL=index.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react18-json-view/dist/es/index.mjs\n");

/***/ })

};
;